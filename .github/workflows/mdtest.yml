name: "mdtest"

on:
  workflow_dispatch:
    inputs:
      dirs:
        description: 'directory width for each depth'
        required: true
        default: 10
      depth:
        description: 'depth of directory'
        required: true
        default: 3
      files:
        description: 'number of files for each directory'
        required: true
        default: 10
      threads:
        description: 'number of threads'
        required: true
        default: 10
      bytes:
        description: 'bytes of each file'
        required: true
        default: 0
jobs:
  mdtest:
    strategy:
      fail-fast: false
      matrix:
        # meta: [ 'sqlite3', 'redis', 'mysql', 'tikv', 'tidb', 'postgres', 'mariadb', 'badger', 'fdb']
        meta: ['postgres']
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set Variable
        id: vars
        run: |
          if [ "${{matrix.meta}}" == "fdb" ]; then
            echo ::set-output name=target::"juicefs.fdb"
          else
            echo ::set-output name=target::"juicefs"
          fi

      - name: Build
        uses: ./.github/actions/build
        with: 
          target: ${{steps.vars.outputs.target}}

      - name: Start minio
        run: | 
          docker run -d -p 9000:9000 --name minio \
                        -e "MINIO_ACCESS_KEY=minioadmin" \
                        -e "MINIO_SECRET_KEY=minioadmin" \
                        -v /tmp/data:/data \
                        -v /tmp/config:/root/.minio \
                        minio/minio server /data

      - name: Prepare meta db
        run: | 
          chmod +x .github/scripts/start_meta_engine.sh
          source .github/scripts/start_meta_engine.sh
          start_meta_engine ${{matrix.meta}}
          meta_url=$(get_meta_url ${{matrix.meta}})
          create_database $meta_url

      - name: Mdtest 
        run: |
          source .github/scripts/start_meta_engine.sh
          meta_url=$(get_meta_url ${{matrix.meta}})
          export PYROSCOPE_AUTH_TOKEN="http://172.27.0.1:4040"  
          dirs=${{ github.event.inputs.dirs }}
          depth=${{ github.event.inputs.depth }}
          files=${{ github.event.inputs.files }}
          bytes=${{ github.event.inputs.bytes }}
          threads=${{ github.event.inputs.threads }}

          ./juicefs format --help | grep "trash-days" && trash_day="--trash-days 0" || trash_day=""
          ./juicefs --help | grep "pyroscope" && pyroscope="--pyroscope http://172.27.0.1:4040" || pyroscope=""
          ./juicefs format $trash_day --storage minio --bucket  http://localhost:9000/ --access-key minioadmin --secret-key minioadmin  $meta_url mdtest
          ./juicefs mount -d $meta_url /tmp/mdtest --no-usage-report $pyroscope 
          ./juicefs mdtest $meta_url test --dirs $dirs --depth $depth --files $files --threads $threads --write $bytes
          find /tmp/mdtest -name abc

      - name: Send Slack Notification
        if: ${{ failure() }}
        uses: juicedata/slack-notify-action@main
        with:
          channel-id: "${{ secrets.SLACK_CHANNEL_ID_FOR_PR_CHECK_NOTIFY }}"
          slack_bot_token: "${{ secrets.SLACK_BOT_TOKEN }}"  
